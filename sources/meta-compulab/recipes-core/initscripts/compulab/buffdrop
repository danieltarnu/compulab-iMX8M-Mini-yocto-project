#! /bin/sh

### BEGIN INIT INFO
# Provides:		buffdropd
# Required-Start:	$syslog
# Required-Stop:	$syslog
# Default-Start:	2 3 4 5
# Default-Stop:		
# Short-Description:	CompuLab buffer drop
### END INIT INFO

if [ -f /lib/lsb/init-functions ]
then
    . /lib/lsb/init-functions
else
    # int log_begin_message (char *message)
log_begin_msg () {
    if [ -z "${1:-}" ]; then
        return 1
    fi
    echo -n "$@" || true
}

log_end_msg () {
    # If no arguments were passed, return
    if [ -z "${1:-}" ]; then
        return 1
    fi

    local retval
    retval=$1

    RED=''
    YELLOW=''
    NORMAL=''

    if [ $1 -eq 0 ]; then
        echo "." || true
    elif [ $1 -eq 255 ]; then
        /bin/echo -e " ${YELLOW}(warning).${NORMAL}" || true
    else
        /bin/echo -e " ${RED}failed!${NORMAL}" || true
    fi
    return $retval
}

log_success_msg () {
    if [ -n "${1:-}" ]; then
        log_begin_msg $@
    fi
    log_end_msg 0
}

log_failure_msg () {
    if [ -n "${1:-}" ]; then
        log_begin_msg $@ "..."
    fi
    log_end_msg 1 || true
}

log_action_msg () {
    echo "$@." || true
}

pidofproc () {
    local pidfile base status specified pid OPTIND
    pidfile=
    specified=
    
    OPTIND=1
    while getopts p: opt ; do
        case "$opt" in
            p)  pidfile="$OPTARG"
                specified="specified"
		;;
        esac
    done
    shift $(($OPTIND - 1))
    if [ $# -ne 1 ]; then
        echo "$0: invalid arguments" >&2
        return 4
    fi

    base=${1##*/}
    if [ ! "$specified" ]; then
        pidfile="/var/run/$base.pid"
    fi

    if [ -n "${pidfile:-}" -a -r "$pidfile" ]; then
        read pid < "$pidfile"
        if [ -n "${pid:-}" ]; then
            if $(kill -0 "${pid:-}" 2> /dev/null); then
                echo "$pid" || true
                return 0
            elif ps "${pid:-}" >/dev/null 2>&1; then
                echo "$pid" || true
                return 0 # program is running, but not owned by this user
            else
                return 1 # program is dead and /var/run pid file exists
            fi
        fi
    fi
    if [ -n "$specified" ]; then
        if [ -e "$pidfile" -a ! -r "$pidfile" ]; then
            return 4 # pidfile exists, but unreadable, return unknown
        else
            return 3 # pidfile specified, but contains no PID to test
        fi
    fi
    if [ -x /bin/pidof ]; then
        status="0"
        /bin/pidof -o %PPID -x $1 || status="$?"
        if [ "$status" = 1 ]; then
            return 3 # program is not running
        fi
        return 0
    fi
    return 4 # Unable to determine status
}

status_of_proc () {
    local pidfile daemon name status OPTIND

    pidfile=
    OPTIND=1
    while getopts p: opt ; do
        case "$opt" in
            p)  pidfile="$OPTARG";;
        esac
    done
    shift $(($OPTIND - 1))

    if [ -n "$pidfile" ]; then
        pidfile="-p $pidfile"
    fi
    daemon="$1"
    name="$2"

    status="0"
    pidofproc $pidfile $daemon >/dev/null || status="$?"
    if [ "$status" = 0 ]; then
        log_success_msg "$name is running"
        return 0
    elif [ "$status" = 4 ]; then
        log_failure_msg "could not access PID file for $name"
        return $status
    else
        log_failure_msg "$name is not running"
        return $status
    fi
}

log_daemon_msg () {
    if [ -z "${1:-}" ]; then
        return 1
    fi

    if [ -z "${2:-}" ]; then
        echo -n "$1:" || true
        return
    fi
    
    echo -n "$1: $2" || true
}
fi

set -e

# /etc/init.d/buffdrop: start and stop the CompuLab "buffer drop" daemon

BUFFDROPD=/usr/sbin/buffdropd

daemon_create() {
if [ ! -x ${BUFFDROPD} ]
then
cat << eof > ${BUFFDROPD}
#!/bin/sh
SLEEP=${SLEEP_VALUE}

echo 4 > /proc/sys/vm/drop_caches

while [ 1 ]
do
cat << eom > /proc/sys/vm/drop_caches
1
2
3
eom
sleep \${SLEEP}
done
eof
chmod 0777 ${BUFFDROPD} 
fi
}

daemon_delete() {
[ -x ${BUFFDROPD} ] && rm -rf ${BUFFDROPD}
}

umask 022

if test -f /etc/default/buffdrop; then
    . /etc/default/buffdrop
fi

[ -z ${BUFFDROP_SLEEP} ] && SLEEP_VALUE=15 || SLEEP_VALUE=${BUFFDROP_SLEEP}

export PATH="${PATH:+$PATH:}/usr/sbin:/sbin"

case "$1" in
  start)
	daemon_create
	log_daemon_msg "Starting CompuLab buffer drop" "buffdropd" || true
	if start-stop-daemon --start --quiet --oknodo --background --make-pidfile --pidfile /var/run/buffdropd.pid --exec ${BUFFDROPD}; then
	    log_end_msg 0 || true
	else
	    log_end_msg 1 || true
	fi
	;;
  stop)
	log_daemon_msg "Stopping CompuLab buffer drop" "buffdropd" || true
	if start-stop-daemon --stop --quiet --oknodo --pidfile /var/run/buffdropd.pid; then
	    log_end_msg 0 || true
	else
	    log_end_msg 1 || true
	fi
	daemon_delete
	;;

  reload|force-reload)
	log_daemon_msg "Reloading CompuLab buffer drop's configuration" "buffdropd" || true
	if start-stop-daemon --stop --signal 1 --quiet --oknodo --pidfile /var/run/buffdropd.pid --exec ${BUFFDROPD}; then
	    log_end_msg 0 || true
	else
	    log_end_msg 1 || true
	fi
	;;

  restart)
	log_daemon_msg "Restarting CompuLab buffer drop" "buffdropd" || true
	start-stop-daemon --stop --quiet --oknodo --retry 30 --pidfile /var/run/buffdropd.pid
	if start-stop-daemon --start --quiet --oknodo --background --make-pidfile --pidfile /var/run/buffdropd.pid --exec ${BUFFDROPD}; then
	    log_end_msg 0 || true
	else
	    log_end_msg 1 || true
	fi
	;;

  try-restart)
	log_daemon_msg "Restarting CompuLab buffer drop" "buffdropd" || true
	RET=0
	start-stop-daemon --stop --quiet --retry 30 --pidfile /var/run/buffdropd.pid || RET="$?"
	case $RET in
	    0)
		# old daemon stopped
		if start-stop-daemon --start --quiet --oknodo --pidfile /var/run/buffdropd.pid --exec ${BUFFDROPD}; then
		    log_end_msg 0 || true
		else
		    log_end_msg 1 || true
		fi
		;;
	    1)
		# daemon not running
		log_progress_msg "(not running)" || true
		log_end_msg 0 || true
		;;
	    *)
		# failed to stop
		log_progress_msg "(failed to stop)" || true
		log_end_msg 1 || true
		;;
	esac
	;;

  status)
	status_of_proc -p /var/run/buffdropd.pid ${BUFFDROPD} buffdropd && exit 0 || exit $?
	;;

  *)
	log_action_msg "Usage: /etc/init.d/buffdrop {start|stop|reload|force-reload|restart|try-restart|status}" || true
	exit 1
esac

exit 0
