From 3b82f5c0c71ce9271f4537c84792ec1e1a55166c Mon Sep 17 00:00:00 2001
From: Valentin Raevsky <valentin@compulab.co.il>
Date: Tue, 9 Aug 2016 13:24:25 +0300
Subject: [PATCH 20/24] gpio-reset: Add gpio-can-sleep option

Signed-off-by: Valentin Raevsky <valentin@compulab.co.il>
---
 Documentation/devicetree/bindings/reset/gpio-reset.txt | 3 +++
 drivers/reset/gpio-reset.c                             | 8 +++++++-
 2 files changed, 10 insertions(+), 1 deletion(-)

diff --git a/Documentation/devicetree/bindings/reset/gpio-reset.txt b/Documentation/devicetree/bindings/reset/gpio-reset.txt
index bca5348..2927fae 100644
--- a/Documentation/devicetree/bindings/reset/gpio-reset.txt
+++ b/Documentation/devicetree/bindings/reset/gpio-reset.txt
@@ -18,6 +18,9 @@ Optional properties:
                       deasserted reset line. If this property exists, the
                       reset line should be kept in reset.
 
+- gpio-can-sleep: boolean. If not set, then initial state is false.
+                  Make the gpio-core use the correct gpio_set() function.
+
 example:
 
 sii902x_reset: gpio-reset {
diff --git a/drivers/reset/gpio-reset.c b/drivers/reset/gpio-reset.c
index 4cb9929..2314c6c 100644
--- a/drivers/reset/gpio-reset.c
+++ b/drivers/reset/gpio-reset.c
@@ -21,6 +21,7 @@ struct gpio_reset_data {
 	unsigned int gpio;
 	bool active_low;
 	s32 delay_us;
+	void (*gpio_set_value)(unsigned, int);
 };
 
 static void gpio_reset_set(struct reset_controller_dev *rcdev, int asserted)
@@ -32,7 +33,7 @@ static void gpio_reset_set(struct reset_controller_dev *rcdev, int asserted)
 	if (drvdata->active_low)
 		value = !value;
 
-	gpio_set_value(drvdata->gpio, value);
+	drvdata->gpio_set_value(drvdata->gpio, value);
 }
 
 static int gpio_reset(struct reset_controller_dev *rcdev, unsigned long id)
@@ -122,6 +123,11 @@ static int gpio_reset_probe(struct platform_device *pdev)
 	else
 		gpio_flags = GPIOF_OUT_INIT_LOW;
 
+	if (of_get_property(np, "gpio-can-sleep", NULL))
+		drvdata->gpio_set_value = gpio_set_value_cansleep;
+	else
+		drvdata->gpio_set_value = gpio_set_value;
+
 	ret = devm_gpio_request_one(&pdev->dev, drvdata->gpio, gpio_flags, NULL);
 	if (ret < 0) {
 		dev_err(&pdev->dev, "failed to request gpio %d: %d\n",
-- 
1.9.1

