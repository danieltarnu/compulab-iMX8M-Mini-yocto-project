From cd3b36f84875c1f4288aafd634176691611295d1 Mon Sep 17 00:00:00 2001
From: Ilya Ledvich <ilya@compulab.co.il>
Date: Thu, 31 Aug 2017 17:27:35 +0300
Subject: [PATCH 12/57] arm: imx7d: cl-som-imx7: add support for NAND flash

Add support for NAND flash as an alternative main storage device.
Note eMMC and NAND are mutually excluding options because both
reside on same pins and thus require different pinmux configuration.
The decision which pinmux set should be applied is done at runtime
by reading a value of GPIO6_13:
 - 0 value corresponds to eMMC option while
 - 1 value corresponds to NAND option

The enable stage of the device tree nodes GPMI and eMMC are updated
according to the detected storage type.

Add the NAND to the default boot storage device list.

Signed-off-by: Ilya Ledvich <ilya@compulab.co.il>
---
 board/compulab/cl-som-imx7/cl-som-imx7.c | 39 ++++++++++++++++++++++++
 board/compulab/cl-som-imx7/common.h      |  4 +++
 board/compulab/cl-som-imx7/mux.c         | 34 +++++++++++++++++++++
 include/configs/cl-som-imx7.h            | 26 +++++++++++++++-
 4 files changed, 102 insertions(+), 1 deletion(-)

diff --git a/board/compulab/cl-som-imx7/cl-som-imx7.c b/board/compulab/cl-som-imx7/cl-som-imx7.c
index 00131ce695..05832087a3 100644
--- a/board/compulab/cl-som-imx7/cl-som-imx7.c
+++ b/board/compulab/cl-som-imx7/cl-som-imx7.c
@@ -25,6 +25,8 @@
 
 DECLARE_GLOBAL_DATA_PTR;
 
+static int nand_enabled = 0;
+
 #ifdef CONFIG_SYS_I2C_MXC
 
 #define I2C_PAD_CTRL		(PAD_CTL_DSE_3P3V_32OHM | PAD_CTL_SRE_SLOW | \
@@ -95,6 +97,9 @@ int board_mmc_init(bd_t *bis)
 				mxc_get_clock(MXC_ESDHC_CLK);
 			break;
 		case 1:
+			if (nand_enabled)
+				return 0; /* nand enabled configuration */
+			/* emmc enabled configuration */
 			cl_som_imx7_usdhc3_emmc_pads_set();
 			gpio_request(CL_SOM_IMX7_GPIO_USDHC3_PWR, "usdhc3_pwr");
 			gpio_direction_output(CL_SOM_IMX7_GPIO_USDHC3_PWR, 0);
@@ -118,6 +123,28 @@ int board_mmc_init(bd_t *bis)
 }
 #endif /* CONFIG_FSL_ESDHC */
 
+#ifdef CONFIG_NAND_MXS
+
+#define CL_SOM_IMX7_NAND_ENABLE		IMX_GPIO_NR(6, 13)
+
+static void get_nand_enable_state(void) {
+	cl_som_imx7_nand_enable_pads_set();
+	gpio_direction_input(CL_SOM_IMX7_NAND_ENABLE);
+	mdelay(1);
+	nand_enabled = gpio_get_value(CL_SOM_IMX7_NAND_ENABLE);
+}
+
+static void cl_som_imx7_setup_gpmi_nand(void)
+{
+	get_nand_enable_state();
+	/* nand enabled configuration */
+	cl_som_imx7_gpmi_nand_pads_set();
+	set_clk_nand();
+}
+#else /* !CONFIG_NAND_MXS */
+static void cl_som_imx7_setup_gpmi_nand(void) {}
+#endif /* CONFIG_NAND_MXS */
+
 #ifdef CONFIG_FEC_MXC
 
 #define CL_SOM_IMX7_ETH1_PHY_NRST	IMX_GPIO_NR(1, 4)
@@ -258,6 +285,7 @@ int board_init(void)
 	/* address of boot parameters */
 	gd->bd->bi_boot_params = PHYS_SDRAM + 0x100;
 	cl_som_imx7_setup_i2c();
+	cl_som_imx7_setup_gpmi_nand();
 	cl_som_imx7_setup_fec();
 	cl_som_imx7_spi_init();
 
@@ -349,6 +377,17 @@ int fdt_board_adjust(void)
 		fdt_node_disable("/soc/aips-bus@30800000/usb@30b20000");
 	}
 
+	/* Main storage setup */
+	if (nand_enabled) {
+		/* Enable GPMI and disable eMMC */
+		fdt_node_enable("/soc/gpmi-nand@33002000");
+		fdt_node_disable("/soc/aips-bus@30800000/usdhc@30b60000");
+	} else {
+		/* Enable eMMC and disable GPMI */
+		fdt_node_enable("/soc/aips-bus@30800000/usdhc@30b60000");
+		fdt_node_disable("/soc/gpmi-nand@33002000");
+	}
+
 	return 0;
 }
 #endif /* CONFIG_OF_BOARD_SETUP */
diff --git a/board/compulab/cl-som-imx7/common.h b/board/compulab/cl-som-imx7/common.h
index 2988bda713..3ed74015cd 100644
--- a/board/compulab/cl-som-imx7/common.h
+++ b/board/compulab/cl-som-imx7/common.h
@@ -29,4 +29,8 @@ PADS_SET_PROT(fec1_pads)
 #endif /* CONFIG_FEC_MXC */
 PADS_SET_PROT(usb_otg1_pads)
 PADS_SET_PROT(wdog_pads)
+#ifdef CONFIG_NAND_MXS
+PADS_SET_PROT(gpmi_nand_pads)
+PADS_SET_PROT(nand_enable_pads)
+#endif /* CONFIG_NAND_MXS */
 #endif /* !CONFIG_SPL_BUILD */
diff --git a/board/compulab/cl-som-imx7/mux.c b/board/compulab/cl-som-imx7/mux.c
index 0186c77d0d..11a7304beb 100644
--- a/board/compulab/cl-som-imx7/mux.c
+++ b/board/compulab/cl-som-imx7/mux.c
@@ -139,4 +139,38 @@ static iomux_v3_cfg_t const wdog_pads[] = {
 
 PADS_SET(wdog_pads)
 
+#ifdef CONFIG_NAND_MXS
+
+#define GPMI_PAD_CTRL		(PAD_CTL_DSE_3P3V_49OHM | PAD_CTL_PUE | \
+				PAD_CTL_PUS_PU100KOHM | PAD_CTL_SRE_SLOW | \
+				PAD_CTL_HYS)
+
+static iomux_v3_cfg_t const gpmi_nand_pads[] = {
+	MX7D_PAD_SD3_CLK__NAND_CLE | MUX_PAD_CTRL(GPMI_PAD_CTRL),
+	MX7D_PAD_SD3_CMD__NAND_ALE | MUX_PAD_CTRL(GPMI_PAD_CTRL),
+	MX7D_PAD_SD3_DATA0__NAND_DATA00 | MUX_PAD_CTRL(GPMI_PAD_CTRL),
+	MX7D_PAD_SD3_DATA1__NAND_DATA01 | MUX_PAD_CTRL(GPMI_PAD_CTRL),
+	MX7D_PAD_SD3_DATA2__NAND_DATA02 | MUX_PAD_CTRL(GPMI_PAD_CTRL),
+	MX7D_PAD_SD3_DATA3__NAND_DATA03 | MUX_PAD_CTRL(GPMI_PAD_CTRL),
+	MX7D_PAD_SD3_DATA4__NAND_DATA04 | MUX_PAD_CTRL(GPMI_PAD_CTRL),
+	MX7D_PAD_SD3_DATA5__NAND_DATA05 | MUX_PAD_CTRL(GPMI_PAD_CTRL),
+	MX7D_PAD_SD3_DATA6__NAND_DATA06 | MUX_PAD_CTRL(GPMI_PAD_CTRL),
+	MX7D_PAD_SD3_DATA7__NAND_DATA07 | MUX_PAD_CTRL(GPMI_PAD_CTRL),
+	MX7D_PAD_SD3_STROBE__NAND_RE_B   | MUX_PAD_CTRL(GPMI_PAD_CTRL),
+	MX7D_PAD_SD3_RESET_B__NAND_WE_B | MUX_PAD_CTRL(GPMI_PAD_CTRL),
+	MX7D_PAD_SAI1_TX_BCLK__NAND_CE0_B | MUX_PAD_CTRL(GPMI_PAD_CTRL),
+	MX7D_PAD_SAI1_TX_DATA__NAND_READY_B | MUX_PAD_CTRL(GPMI_PAD_CTRL),
+	MX7D_PAD_SAI1_MCLK__NAND_WP_B | MUX_PAD_CTRL(GPMI_PAD_CTRL),
+};
+
+PADS_SET(gpmi_nand_pads)
+
+static iomux_v3_cfg_t const nand_enable_pads[] = {
+	MX7D_PAD_SAI1_TX_BCLK__GPIO6_IO13 | MUX_PAD_CTRL(0),
+};
+
+PADS_SET(nand_enable_pads)
+
+#endif /* CONFIG_NAND_MXS */
+
 #endif /* !CONFIG_SPL_BUILD */
diff --git a/include/configs/cl-som-imx7.h b/include/configs/cl-som-imx7.h
index 1e741e4e39..f4e009277a 100644
--- a/include/configs/cl-som-imx7.h
+++ b/include/configs/cl-som-imx7.h
@@ -76,7 +76,9 @@
 	"script=boot.scr\0" \
 	"loadscript=load ${storagetype} ${storagedev} ${loadaddr} ${script};\0" \
 	"loadkernel=load ${storagetype} ${storagedev} ${loadaddr} ${kernel};\0" \
+	"loadkernel_nand=nand read ${loadaddr} 0 600000\0" \
 	"loadfdt=load ${storagetype} ${storagedev} ${fdtaddr} ${fdtfile};\0" \
+	"loadfdt_nand=nand read ${fdtaddr} 980000 10000\0" \
 	"bootscript=echo Running bootscript from ${storagetype} ...; source ${loadaddr};\0" \
 	"storagebootcmd=echo Booting from ${storagetype} ...; run ${storagetype}args; run doboot;\0" \
 	"kernel=zImage\0" \
@@ -93,6 +95,8 @@
 	"mmc_config=mmc dev ${mmcdev}; mmc rescan\0" \
 	"mmcargs=setenv bootargs console=${console},${baudrate} " \
 		"root=/dev/mmcblk${mmcblk}p2 rootwait rw\0" \
+	"nandargs=setenv bootargs console=${console},${baudrate} " \
+		"root=ubi0:rootfs rw rootfstype=ubifs ubi.mtd=rootfs\0" \
 	"mmcbootscript=" \
 		"if run mmc_config; then " \
 			"setenv storagetype mmc;" \
@@ -122,11 +126,19 @@
 	"sdboot=setenv mmcdev ${mmcdev_def}; setenv mmcblk 0; run mmcboot\0" \
 	"emmcbootscript=setenv mmcdev 1; setenv mmcblk 2; run mmcbootscript\0" \
 	"emmcboot=setenv mmcdev 1; setenv mmcblk 2; run mmcboot\0" \
+	"nandboot=" \
+		"setenv storagetype nand;" \
+		"if run loadkernel_nand; then " \
+			"if run loadfdt_nand; then " \
+				"run storagebootcmd;" \
+			"fi; " \
+		"fi;\0" \
 
 #define CONFIG_BOOTCOMMAND \
 	"echo SD boot attempt ...; run sdbootscript; run sdboot; " \
 	"echo eMMC boot attempt ...; run emmcbootscript; run emmcboot; " \
-	"echo USB boot attempt ...; run usbbootscript; "
+	"echo USB boot attempt ...; run usbbootscript; " \
+	"echo NAND boot attempt  ...; run nandboot"
 
 #define CONFIG_SYS_MEMTEST_START	0x80000000
 #define CONFIG_SYS_MEMTEST_END		(CONFIG_SYS_MEMTEST_START + 0x20000000)
@@ -189,6 +201,18 @@
 #ifdef CONFIG_SPL_BUILD
 #define CONFIG_SPL_SPI_LOAD
 #define CONFIG_SYS_SPI_U_BOOT_OFFS	(64 * 1024)
+#else /* !CONFIG_SPL_BUILD */
+/* NAND configuration */
+#define CONFIG_CMD_NAND
+#define CONFIG_SYS_MAX_NAND_DEVICE     1
+#define CONFIG_SYS_NAND_BASE           0x40000000
+#define CONFIG_SYS_NAND_MAX_CHIPS      1
+#define CONFIG_NAND_MXS
+#define CONFIG_SYS_NAND_ONFI_DETECTION
+/* APBH DMA is required for NAND support */
+#define CONFIG_APBH_DMA
+#define CONFIG_APBH_DMA_BURST
+#define CONFIG_APBH_DMA_BURST8
 #endif /* CONFIG_SPL_BUILD */
 
 #endif	/* __CONFIG_H */
-- 
2.17.1

