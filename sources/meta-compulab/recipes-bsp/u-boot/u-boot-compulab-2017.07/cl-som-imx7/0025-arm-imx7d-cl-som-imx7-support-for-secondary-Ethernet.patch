From 3c5b5268a8c71540a12d96396db6b4b22fb295de Mon Sep 17 00:00:00 2001
From: Uri Mashiach <uri.mashiach@compulab.co.il>
Date: Sun, 10 Sep 2017 17:42:10 +0300
Subject: [PATCH 25/57] arm: imx7d: cl-som-imx7: support for secondary Ethernet
 interface

Add signals MUX settings.
Add MAC and PHY initialization.

Signed-off-by: Uri Mashiach <uri.mashiach@compulab.co.il>
---
 board/compulab/cl-som-imx7/cl-som-imx7.c | 101 +++++++++++++++++++++--
 board/compulab/cl-som-imx7/common.h      |   1 +
 board/compulab/cl-som-imx7/mux.c         |  17 ++++
 3 files changed, 111 insertions(+), 8 deletions(-)

diff --git a/board/compulab/cl-som-imx7/cl-som-imx7.c b/board/compulab/cl-som-imx7/cl-som-imx7.c
index 56b796f656..d2880f5c36 100644
--- a/board/compulab/cl-som-imx7/cl-som-imx7.c
+++ b/board/compulab/cl-som-imx7/cl-som-imx7.c
@@ -13,6 +13,7 @@
 #include <phy.h>
 #include <netdev.h>
 #include <fsl_esdhc.h>
+#include <pca953x.h>
 #include <power/pmic.h>
 #include <power/pfuze3000_pmic.h>
 #include <asm/imx-common/mxc_i2c.h>
@@ -229,10 +230,12 @@ int board_phy_config(struct phy_device *phydev)
  *
  * @env_var: MAC address environment variable
  * @eeprom_bus: I2C bus of the environment EEPROM
+ * @eeprom_field_mac_addr: EEPROM field name of the MAC address 
  *
  * @return: 0 on success, < 0 on failure
  */
-static int cl_som_imx7_handle_mac_address(char *env_var, uint eeprom_bus)
+static int cl_som_imx7_handle_mac_address(char *env_var, uint eeprom_bus,
+					  char *eeprom_field_mac_addr)
 {
 	int ret;
 	unsigned char enetaddr[6];
@@ -245,6 +248,12 @@ static int cl_som_imx7_handle_mac_address(char *env_var, uint eeprom_bus)
 	if (ret)
 		return ret;
 
+	ret = cl_som_am57x_layout.read(&cl_som_am57x_layout,
+				      eeprom_field_mac_addr, enetaddr,
+				      sizeof(enetaddr));
+	if (ret)
+		return ret;
+
 	ret = is_valid_ethaddr(enetaddr);
 	if (!ret)
 		return -1;
@@ -253,11 +262,23 @@ static int cl_som_imx7_handle_mac_address(char *env_var, uint eeprom_bus)
 }
 
 #define CL_SOM_IMX7_FEC_DEV_ID_PRI 0
+#define CL_SOM_IMX7_FEC_DEV_ID_SEC 1
+#define CL_SOM_IMX7_PCA953X_PHY_RST_SEC 4
+#define CL_SOM_IMX7_FEC_PHYADDR_PRI CONFIG_FEC_MXC_PHYADDR
+#define CL_SOM_IMX7_FEC_PHYADDR_SEC 1
 
-int board_eth_init(bd_t *bis)
+/*
+ * cl_som_imx7_eth_init_pri() - primary Ethernet interface initialization
+ *
+ * @bis: board information
+ *
+ * @return: 0 on success, < 0 on failure
+ */
+static int cl_som_imx7_eth_init_pri(bd_t *bis)
 {
 	/* set Ethernet MAC address environment */
-	cl_som_imx7_handle_mac_address("ethaddr", CONFIG_SYS_I2C_EEPROM_BUS);
+	cl_som_imx7_handle_mac_address("ethaddr", CONFIG_SYS_I2C_EEPROM_BUS,
+				       "1st MAC Address");
 	/* Ethernet interface pinmux configuration  */
 	cl_som_imx7_phy1_rst_pads_set();
 	cl_som_imx7_fec1_pads_set();
@@ -266,10 +287,71 @@ int board_eth_init(bd_t *bis)
 	gpio_direction_output(CL_SOM_IMX7_ETH1_PHY_NRST, 0);
 	mdelay(10);
 	gpio_set_value(CL_SOM_IMX7_ETH1_PHY_NRST, 1);
-	/* MAC initialization */
+
 	return fecmxc_initialize_multi(bis, CL_SOM_IMX7_FEC_DEV_ID_PRI,
-				       CONFIG_FEC_MXC_PHYADDR, IMX_FEC_BASE,
-				       IMX_FEC_BASE);
+				       CL_SOM_IMX7_FEC_PHYADDR_PRI,
+				       IMX_FEC_BASE, IMX_FEC_BASE);
+}
+
+/*
+ * cl_som_imx7_eth_init_pri() - secondary Ethernet interface initialization
+ *
+ * @bis: board information
+ *
+ * @return: 0 on success, < 0 on failure
+ */
+static int cl_som_imx7_eth_init_sec(bd_t *bis)
+{
+	int ret;
+	u32 cpurev = get_cpu_rev();
+
+	/* i.MX7Solo include 1 Ethernet interface */
+	if (((cpurev & 0xFF000) >> 12) == MXC_CPU_MX7S)
+		return 0;
+
+	/* set Ethernet MAC address environment */
+	cl_som_imx7_handle_mac_address("eth1addr", CONFIG_SYS_I2C_EEPROM_BUS,
+				       "2nd MAC Address");
+	/* Ethernet interface pinmux configuration  */
+	cl_som_imx7_fec2_pads_set();
+	/* PHY reset */
+	ret = i2c_set_bus_num(SYS_I2C_BUS_SOM);
+	if (ret != 0) {
+		puts ("Failed to select the SOM I2C bus\n");
+		return -1;
+	}
+	ret = pca953x_set_dir(CONFIG_SYS_I2C_PCA953X_ADDR,
+			      1 << CL_SOM_IMX7_PCA953X_PHY_RST_SEC,
+			      PCA953X_DIR_OUT <<
+			      CL_SOM_IMX7_PCA953X_PHY_RST_SEC);
+	ret |= pca953x_set_val(CONFIG_SYS_I2C_PCA953X_ADDR,
+			       1 << CL_SOM_IMX7_PCA953X_PHY_RST_SEC, 0);
+	mdelay(10);
+	ret |= pca953x_set_val(CONFIG_SYS_I2C_PCA953X_ADDR,
+			       1 << CL_SOM_IMX7_PCA953X_PHY_RST_SEC,
+			       1 << CL_SOM_IMX7_PCA953X_PHY_RST_SEC);
+	if (ret != 0) {
+		puts ("Failed to reset the secondary Ethernet PHY\n");
+		return -1;
+	}
+	/* MAC initialization with the primary MDIO bus */
+	return fecmxc_initialize_multi(bis, CL_SOM_IMX7_FEC_DEV_ID_SEC,
+				       CL_SOM_IMX7_FEC_PHYADDR_SEC,
+				       ENET2_IPS_BASE_ADDR, IMX_FEC_BASE);
+}
+
+int board_eth_init(bd_t *bis)
+{
+	int ret;
+
+	ret = cl_som_imx7_eth_init_pri(bis);
+	if (ret)
+		puts ("Ethernet initialization failure: primary interface\n");
+	ret |= cl_som_imx7_eth_init_sec(bis);
+	if (ret)
+		puts ("Ethernet initialization failure: secondary interface\n");
+
+	return ret;
 }
 
 /*
@@ -282,10 +364,13 @@ static void cl_som_imx7_setup_fec(void)
 	struct iomuxc_gpr_base_regs *const iomuxc_gpr_regs
 		= (struct iomuxc_gpr_base_regs *)IOMUXC_GPR_BASE_ADDR;
 
-	/* Use 125M anatop REF_CLK1 for ENET1, clear gpr1[13], gpr1[17]*/
+	/* Use 125M anatop REF_CLK1 for ENET1, clear gpr1[13], gpr1[17]
+	   Use 125M anatop REF_CLK2 for ENET2, clear gpr1[14], gpr1[18] */
 	clrsetbits_le32(&iomuxc_gpr_regs->gpr[1],
 			(IOMUXC_GPR_GPR1_GPR_ENET1_TX_CLK_SEL_MASK |
-			 IOMUXC_GPR_GPR1_GPR_ENET1_CLK_DIR_MASK), 0);
+			 IOMUXC_GPR_GPR1_GPR_ENET2_TX_CLK_SEL_MASK |
+			 IOMUXC_GPR_GPR1_GPR_ENET1_CLK_DIR_MASK |
+			 IOMUXC_GPR_GPR1_GPR_ENET2_CLK_DIR_MASK), 0);
 
 	set_clk_enet(ENET_125MHz);
 }
diff --git a/board/compulab/cl-som-imx7/common.h b/board/compulab/cl-som-imx7/common.h
index a45ec07a92..02dcf6296b 100644
--- a/board/compulab/cl-som-imx7/common.h
+++ b/board/compulab/cl-som-imx7/common.h
@@ -26,6 +26,7 @@ PADS_SET_PROT(usdhc3_emmc_pads)
 #ifdef CONFIG_FEC_MXC
 PADS_SET_PROT(phy1_rst_pads)
 PADS_SET_PROT(fec1_pads)
+PADS_SET_PROT(fec2_pads)
 #endif /* CONFIG_FEC_MXC */
 PADS_SET_PROT(usb_otg1_pads)
 PADS_SET_PROT(wdog_pads)
diff --git a/board/compulab/cl-som-imx7/mux.c b/board/compulab/cl-som-imx7/mux.c
index 11a7304beb..15d4423fa0 100644
--- a/board/compulab/cl-som-imx7/mux.c
+++ b/board/compulab/cl-som-imx7/mux.c
@@ -125,6 +125,23 @@ static iomux_v3_cfg_t const fec1_pads[] = {
 
 PADS_SET(fec1_pads)
 
+static iomux_v3_cfg_t const fec2_pads[] = {
+	MX7D_PAD_EPDC_SDCE0__ENET2_RGMII_RX_CTL | MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX7D_PAD_EPDC_SDCLK__ENET2_RGMII_RD0    | MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX7D_PAD_EPDC_SDLE__ENET2_RGMII_RD1     | MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX7D_PAD_EPDC_SDOE__ENET2_RGMII_RD2     | MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX7D_PAD_EPDC_SDSHR__ENET2_RGMII_RD3    | MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX7D_PAD_EPDC_SDCE1__ENET2_RGMII_RXC    | MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX7D_PAD_EPDC_GDRL__ENET2_RGMII_TX_CTL  | MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX7D_PAD_EPDC_SDCE2__ENET2_RGMII_TD0    | MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX7D_PAD_EPDC_SDCE3__ENET2_RGMII_TD1    | MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX7D_PAD_EPDC_GDCLK__ENET2_RGMII_TD2    | MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX7D_PAD_EPDC_GDOE__ENET2_RGMII_TD3     | MUX_PAD_CTRL(ENET_PAD_CTRL),
+	MX7D_PAD_EPDC_GDSP__ENET2_RGMII_TXC     | MUX_PAD_CTRL(ENET_PAD_CTRL),
+};
+
+PADS_SET(fec2_pads)
+
 #endif /* CONFIG_FEC_MXC */
 
 static iomux_v3_cfg_t const usb_otg1_pads[] = {
-- 
2.17.1

