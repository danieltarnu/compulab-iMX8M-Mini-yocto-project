From c5961d97bd6175c2a1242376394432b1701ab4a5 Mon Sep 17 00:00:00 2001
From: Uri Mashiach <uri.mashiach@compulab.co.il>
Date: Wed, 6 Sep 2017 17:16:05 +0300
Subject: [PATCH 24/57] arm: imx7d: cl-som-imx7: set environment variable
 serial#

During startup the serial number is read from the EEPROM of the module
or the mainboard, validated and stored in the environment variable
serial#.

Signed-off-by: Uri Mashiach <uri.mashiach@compulab.co.il>
---
 board/compulab/cl-som-imx7/cl-som-imx7.c | 99 ++++++++++++++++++++++++
 1 file changed, 99 insertions(+)

diff --git a/board/compulab/cl-som-imx7/cl-som-imx7.c b/board/compulab/cl-som-imx7/cl-som-imx7.c
index dd5de751bb..56b796f656 100644
--- a/board/compulab/cl-som-imx7/cl-som-imx7.c
+++ b/board/compulab/cl-som-imx7/cl-som-imx7.c
@@ -20,6 +20,7 @@
 #include <asm/arch-mx7/mx7-pins.h>
 #include <asm/arch-mx7/sys_proto.h>
 #include <asm/arch-mx7/clock.h>
+#include <asm/setup.h>
 #include <eeprom_layout.h>
 #include "../common/eeprom.h"
 #include "common.h"
@@ -375,6 +376,103 @@ static void cl_som_imx7_update_dtb_name(void)
 		       [CL_SOM_IMX7_BOARD_ID_DEF].fdt_file);
 }
 
+#define CL_SOM_IMX7_SERIAL_LEN1 9
+
+/*
+ * cl_som_imx7_serial_valid1() - serial number validation pattern 1.
+ * Validation pattern 1: 5A[0-9]{7}
+ *
+ * @serial_buf: serial number string.
+ * Returns 0 on failure, 1 on success.
+ */
+static int cl_som_imx7_serial_valid1(char serial_buf[])
+{
+       int i=0;
+
+       if (strlen(serial_buf) != CL_SOM_IMX7_SERIAL_LEN1)
+               return 0;
+       if (serial_buf[i++] != '5')
+               return 0;
+       if (serial_buf[i++] != 'A')
+               return 0;
+       for (; i < CL_SOM_IMX7_SERIAL_LEN1; i++)
+               if ((serial_buf[i] < '0') || (serial_buf[i] > '9'))
+                       return 0;
+
+       return 1;
+}
+
+#define CL_SOM_IMX7_SERIAL_LEN2 12
+
+/*
+ * cl_som_imx7_serial_valid2() - serial number validation pattern 2.
+ * Validation pattern 2: [0-9]{12}
+ *
+ * @serial_buf: serial number string.
+ * Returns 0 on failure, 1 on success.
+ */
+static int cl_som_imx7_serial_valid2(char *serial_buf)
+{
+	int i;
+
+	if (strlen(serial_buf) != CL_SOM_IMX7_SERIAL_LEN2)
+		return 0;
+
+	for (i=0; i < CL_SOM_IMX7_SERIAL_LEN2; i++)
+		if ((serial_buf[i] < '0') || (serial_buf[i] > '9'))
+			return 0;
+
+	return 1;
+}
+
+#define CL_SOM_IMX7_ENV_SERIAL "serial#"
+#define CL_SOM_IMX7_SERIAL_BUF_SIZE 17
+
+/*
+ * cl_som_imx7_set_serial_env() - set environment variable serial#.
+ * The serial number is read from the EEPROM of the module or the mainboard.
+ *
+ */
+static void cl_som_imx7_set_serial_env(void)
+{
+	struct tag_serialnr board_serial;
+	char *serial_ptr = getenv(CL_SOM_IMX7_ENV_SERIAL);
+	char serial_buf[CL_SOM_IMX7_SERIAL_BUF_SIZE];
+
+	if (serial_ptr) /* Serial number was set */
+		return;
+
+	/* Read serial number from the EEPROM */
+	switch (cl_som_imx7_base_id) {
+	case CL_SOM_IMX7_SB_SOM:
+		cl_som_am57x_layout.read(&cl_som_am57x_layout, "Serial Number",
+					 (uchar*) &board_serial,
+					 sizeof(board_serial));
+		break;
+	case CL_SOM_IMX7_SB_IOT:
+	case CL_SOM_IMX7_IOTG:
+		sb_som_am57x_layout.read(&sb_som_am57x_layout, "Serial Number",
+					 (uchar*) &board_serial,
+					 sizeof(board_serial));
+		break;
+	default:
+		return;
+	}
+
+	/* Convert serial number to string */
+	sprintf(serial_buf, "%X%X", board_serial.high, board_serial.low);
+
+	/* Serial number validation */
+	if (!cl_som_imx7_serial_valid1(serial_buf) &&
+	    !cl_som_imx7_serial_valid2(serial_buf)) {
+		printf("%s: invalid serial number\n", __func__);
+		return;
+	}
+
+	/* Validation pass - store serial number in the environment */
+	setenv(CL_SOM_IMX7_ENV_SERIAL, serial_buf);
+}
+
 int board_early_init_f(void)
 {
 	cl_som_imx7_uart1_pads_set();
@@ -463,6 +561,7 @@ int board_late_init(void)
 	setenv("board_name", "CL-SOM-iMX7");
 	cl_som_imx7_setup_wdog();
 	cl_som_imx7_update_dtb_name();
+	cl_som_imx7_set_serial_env();
 
 	return 0;
 }
-- 
2.17.1

