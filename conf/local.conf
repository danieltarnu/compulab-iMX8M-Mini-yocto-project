MACHINE ??= 'ucm-imx8m-mini'
DISTRO ?= 'fsl-imx-xwayland'
PACKAGE_CLASSES ?= "package_rpm"
EXTRA_IMAGE_FEATURES ?= "debug-tweaks"
USER_CLASSES ?= "buildstats image-mklibs image-prelink"
PATCHRESOLVE = "noop"
BB_DISKMON_DIRS ??= "\
    STOPTASKS,${TMPDIR},1G,100K \
    STOPTASKS,${DL_DIR},1G,100K \
    STOPTASKS,${SSTATE_DIR},1G,100K \
    STOPTASKS,/tmp,100M,100K \
    ABORT,${TMPDIR},100M,1K \
    ABORT,${DL_DIR},100M,1K \
    ABORT,${SSTATE_DIR},100M,1K \
    ABORT,/tmp,10M,1K"
PACKAGECONFIG_append_pn-qemu-native = " sdl"
PACKAGECONFIG_append_pn-nativesdk-qemu = " sdl"
CONF_VERSION = "1"

DL_DIR ?= "${BSPDIR}/downloads/"
ACCEPT_FSL_EULA = "1"

CORE_IMAGE_EXTRA_INSTALL += " dhcp-client memtester cl-uboot cl-deploy cl-launcher bt-start cl-stest cl-camera u-boot-fw-utils imx-gpu-viv-demos htop iotop tmux iperf3 openssh"

IMAGE_FEATURES += " package-management ssh-server-openssh "
LICENSE_FLAGS_WHITELIST = "commercial"
PREFERRED_RPROVIDER_u-boot-fw-utils = "u-boot-fw-utils"
BBMASK += "meta-compulab/recipes-xfce"

# Users' Configurations
# Add Chromium
IMAGE_INSTALL_append = \
    "${@bb.utils.contains('DISTRO_FEATURES', 'wayland', ' chromium-ozone-wayland', \
        bb.utils.contains('DISTRO_FEATURES',     'x11', ' chromium-x11', \
                                                        '', d), d)}"

# PACKAGECONFIG_append_pn-qtbase = " gles2 dbus freetype glib release eglfs cups sql-sqlite sql-mysql fontconfig evdev iconv alsa openssl icu zlib libpng jpeg harfbuzz accessibility widgets libs"
# https://forum.qt.io/topic/85074/yocto-imx6-qt5-9-and-qtquick-extras/7
PACKAGECONFIG_append_pn-qtbase = " accessibility"

QML_PACKAGES = " \
    qt3d \
    qt3d-dev \
    qt3d-mkspecs \
	qt3d-qmlplugins \
	qt3d-tools \
    qtcharts \
    qtcharts-dev \
    qtcharts-mkspecs \
    qtconnectivity-dev \
    qtconnectivity-mkspecs \
    qtquickcontrols2 \
	qtquickcontrols \
    qtquickcontrols-qmlplugins \
    qtquickcontrols2 \
    qtquickcontrols2-qmlplugins \
    qtquickcontrols2-dev \
    qtquickcontrols2-mkspecs \
    qtdeclarative \
    qtdeclarative-dev \
    qtdeclarative-mkspecs \
	qtdeclarative-plugins \
	qtdeclarative-tools \
	qtdeclarative-qmlplugins \
    qtgraphicaleffects \
    qtgraphicaleffects-dev \
	qtgraphicaleffects-qmlplugins \		
	qtsvg \
	qtsvg-plugins \
	qtsensors \
	qtimageformats-plugins \
	qtsystems \
	qtsystems-tools \
	qtsystems-qmlplugins \
	qtscript \
	qtconnectivity-dev \
	qtconnectivity-mkspecs \
	qtconnectivity-qmlplugins \
	qtlocation-plugins \
	qtlocation-qmlplugins \
"

QT_WEBKIT = " \
	qtwebkit \
	qtwebkit-qmlplugins \
"
QT_MULTIMEDIA = " \
	qtmultimedia \
	qtmultimedia-plugins \
	qtmultimedia-qmlplugins \
"

GSTREAMER = " \
	gstreamer1.0 \
   	gstreamer1.0-libav \
   	gstreamer1.0-plugins-good \
   	gstreamer1.0-plugins-bad \
"

QT_TOOLS = " \
    qtbase \
    qtbase-dev \
    qtbase-mkspecs \
    qtbase-plugins \
    qtbase-tools \
"

QT_SAMPLES = " \
	qt3d-examples \
	qtmultimedia-examples \
	qtsystems-examples \
"

IMAGE_INSTALL_append += " \
	${QT_TOOLS} \
	${QML_PACKAGES} \
	${GSTREAMER} \
	${QT_MULTIMEDIA} \
"

SFTP_PACKAGE = " \
	openssh-sftp-server \
"

IMAGE_INSTALL_append += " \
	${SFTP_PACKAGE} \
"

MONO_BASIC_PACKAGES = " \
	mono \
"

MONO_FULL_PACKAGES = " \
	mono-upnp \
	dbus-sharp \
	dbus-sharp-glib \ 
	gtk-sharp \
	mono-helloworld \
	mono-xsp \
	monotools-server \
	taglib-sharp \
	fsharp \
	libgdiplus \ 
	mono-basic \
	mono-upnp \
"

IMAGE_INSTALL_append += " \
	${MONO_BASIC_PACKAGES} \
"

ADDITIONAL_PACKAGES = " \
	parted \
	zlib \
"

IMAGE_INSTALL_append += " \
	${ADDITIONAL_PACKAGES} \
"

ADDITIONAL_SECURITY_PACKAGES = " \
	xmlsec1 \
"

IMAGE_INSTALL_append += " \
	${ADDITIONAL_SECURITY_PACKAGES} \
"

BOOST_LIBRARY = " \
	boost \
"

IMAGE_INSTALL_append += " \
	${BOOST_LIBRARY} \
"

#.NET dependencies
CORE_IMAGE_EXTRA_INSTALL += " libunwind icu libcurl openssl "

#It is strongly recommended to use curl with OpenSSL backend.
PACKAGECONFIG_pn-curl = 'vers krb5 ssl zlib ipv6'

#Check curl recipe for comple set of options. For debugging you may also add
CORE_IMAGE_EXTRA_INSTALL += " curl "

PREFERRED_VERSION_dotnet-core = "3.1.0"
CORE_IMAGE_EXTRA_INSTALL  += " aspnet-core vsdbg "

# Add python 3
CORE_IMAGE_EXTRA_INSTALL += " python3 python3-pip git " 

PREFERRED_VERSION_gcc-cross-${TARGET_ARCH} ?= "8%"
